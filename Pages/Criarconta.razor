@page "/criarconta"
@using Microsoft.IdentityModel.Tokens
@using Newtonsoft.Json
@inject SupabaseService SupabaseService
@inject NavigationManager NavigationManager
@using System.IO
@using Microsoft.AspNetCore.Components.Forms
@using static Supabase.Gotrue.Constants
@using Supabase.Gotrue
@inject IJSRuntime JS
@inject IJSRuntime JSRuntime
@using Supabase
@using static Supabase.Gotrue.Constants


<PageTitle>Criar Conta</PageTitle>

<body>
    <section class="bg-white">
        <div class="lg:grid lg:min-h-screen lg:grid-cols-12">
            <aside class="relative block h-16 lg:order-last lg:col-span-5 lg:h-full xl:col-span-6">
                <img alt=""
                     src="https://images.unsplash.com/photo-1605106702734-205df224ecce?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"
                     class="absolute inset-0 h-full w-full object-cover" />
            </aside>

            <main class="flex items-center justify-center px-8 py-8 sm:px-12 lg:col-span-7 lg:px-16 lg:py-12 xl:col-span-6">
                <div class="max-w-xl lg:max-w-3xl">
                    <a class="block text-blue-600" href="#">
                        <span class="sr-only">Home</span>
                        <svg class="h-8 sm:h-10"
                             viewBox="0 0 28 24"
                             fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <!-- Icon code -->
                        </svg>
                    </a>

                    <h1 class="mt-6 text-2xl font-bold text-gray-900 sm:text-3xl md:text-4xl">
                        Seja bem vindo a plantas detectáveis 🦑
                        Vamos criar uma Conta !!
                    </h1>

                    <p class="mt-4 leading-relaxed text-gray-500">
                        Preencha o nosso formulário para que você descubra o mundo das plantas
                    </p>

                    <EditForm Model="@userInfo" OnValidSubmit="OnCreateAccountClick" class="mt-8 grid grid-cols-6 gap-6">
                        <div class="col-span-6 sm:col-span-3">
                            <label for="FirstName" class="block text-sm font-medium text-gray-700">
                                First Name
                            </label>
                            <InputText id="FirstName"
                                       @bind-Value="userInfo.FirstName"
                                       class="mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm" />
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label for="LastName" class="block text-sm font-medium text-gray-700">
                                Last Name
                            </label>
                            <InputText id="LastName"
                                       @bind-Value="userInfo.LastName"
                                       class="mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm" />
                        </div>

                        <div class="col-span-6">
                            <label for="Email" class="block text-sm font-medium text-gray-700"> Email </label>
                            <InputText type="email"
                                       id="Email"
                                       @bind-Value="userInfo.Email"
                                       class="mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm" />
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label for="Password" class="block text-sm font-medium text-gray-700"> Password </label>
                            <InputText type="password"
                                       id="Password"
                                       @bind-Value="userInfo.Password"
                                       class="mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm" />
                        </div>

                        <div class="col-span-6 sm:col-span-3">
                            <label for="PasswordConfirmation" class="block text-sm font-medium text-gray-700">
                                Password Confirmation
                            </label>
                            <InputText type="password"
                                       id="PasswordConfirmation"
                                       @bind-Value="userInfo.PasswordConfirmation"
                                       class="mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm" />
                        </div>

                        <div class="col-span-6">
                            <label for="MarketingAccept" class="flex gap-4">
                                <InputCheckbox id="MarketingAccept"
                                               @bind-Value="userInfo.MarketingAccept"
                                               class="size-5 rounded-md border-gray-200 bg-white shadow-sm" />
                                <span class="text-sm text-gray-700">
                                    Quero receber e-mails sobre eventos, atualizações e anúncios.
                                </span>
                            </label>
                        </div>

                        <div class="col-span-6 sm:flex sm:items-center sm:gap-4">
                            <button type="submit"
                                    class="inline-block shrink-0 rounded-md border border-blue-600 bg-blue-600 px-12 py-3 text-sm font-medium text-white transition hover:bg-transparent hover:text-blue-600 focus:outline-none focus:ring active:text-blue-500">
                                Criar conta
                            </button>


                            <button @onclick="OnLoginWithGoogleClick"
                                    class="col-span-6 sm:flex sm:items-center sm:gap-4 border rounded px-4 py-2 bg-white hover:bg-gray-100">
                                <img src="images/icons8-google-48.png" alt="Google" style="width: 20px; height: 20px; margin-right: 8px;">
                                Login com Google
                            </button>


                            <button @onclick="OnLoginWithFacebookClick"
                                    class="col-span-6 sm:flex sm:items-center sm:gap-4 border rounded px-4 py-2 bg-white hover:bg-gray-100">
                                <img src="images/icons8-facebook-novo-48.png" alt="Google" style="width: 20px; height: 20px; margin-right: 8px;">
                                Login com Facebook
                            </button>


                            <p class="mt-4 text-sm text-gray-500 sm:mt-0">
                                Já tem uma conta?
                                <a href="#" class="text-gray-700 underline">Entrar</a>.
                            </p>
                        </div>
                    </EditForm>
                </div>
            </main>
        </div>
    </section>
</body>

@code {

    public Supabase.Client _supabase;

    protected override void OnInitialized()
    {
        _supabase = new Supabase.Client("https://supabase.leandroti.uk/", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...");
    }


    public async Task OnLoginWithFacebookClick()
    {
        try
        {
            var response = await _supabase.Auth.SignIn(Provider.Facebook);

            // Verifica se a resposta tem uma URL válida para redirecionamento
            if (response != null && !string.IsNullOrEmpty(response.Uri.AbsoluteUri.Replace("//", "/")))
            {
                NavigationManager.NavigateTo(response.Uri.AbsoluteUri.Replace("//", "/")); // Redireciona para o Google OAuth
            }
            else
            {
                Console.WriteLine("Erro: URL de redirecionamento não encontrada.");
            }

            Console.WriteLine("Erro: URL de redirecionamento não encontrada.");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Erro durante login com Google: " + ex.Message);
        }
    }

    public async Task OnLoginWithGoogleClick()
    {
        try
        {
            var response = await _supabase.Auth.SignIn(Provider.Google);

            // Verifica se a resposta tem uma URL válida para redirecionamento
            if (response != null && !string.IsNullOrEmpty(response.Uri.AbsoluteUri.Replace("//", "/")))
            {
                NavigationManager.NavigateTo(response.Uri.AbsoluteUri.Replace("//", "/")); // Redireciona para o Google OAuth
            }
            else
            {
                Console.WriteLine("Erro: URL de redirecionamento não encontrada.");
            }

            Console.WriteLine("Erro: URL de redirecionamento não encontrada.");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Erro durante login com Google: " + ex.Message);
        }
    }


    private UserInfo userInfo = new UserInfo();

    private void OnCreateAccountClick()
    {
        cadastrar(userInfo.Email, userInfo.Password);
    }

    public async Task cadastrar(string email, string password)
    {
        try
        {
            SupabaseService.CadastrarCliente(email, password);
            MeuEmail myemail = new MeuEmail { email = email, password = password };
            await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "myemail", JsonConvert.SerializeObject(myemail));
            NavigationManager.NavigateTo("/dashboard");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Source);
        }
    }

    public class MeuEmail
    {
        public string email { get; set; }
        public string password { get; set; }
    }

    public class UserInfo
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public string PasswordConfirmation { get; set; }
        public bool MarketingAccept { get; set; }
    }
}
